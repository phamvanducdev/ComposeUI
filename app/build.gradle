plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
}

apply from: '../gradle/ktlint.gradle'

android {
    apply from: '../config/signature/debug.gradle', to: android
    apply from: '../config/signature/release.gradle', to: android

    namespace 'com.ducpv.composeui'

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.ducpv.composeui"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 7
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "environment"
    productFlavors {
        def envProperties = new Properties()
        envProperties.load(rootProject.file('config/properties/env.properties').newDataInputStream())
        develop {
            dimension "environment"
            applicationIdSuffix '.dev'
            buildConfigField("String", "API_URL", "\"${envProperties.getProperty("API_URL_DEV")}\"")
            buildConfigField("String", "STORAGE_BUCKET", "\"${envProperties.getProperty("STORAGE_BUCKET_DEV")}\"")
            resValue "string", "app_name", "ComposeUi[Dev]"
        }
        production {
            dimension "environment"
            buildConfigField("String", "API_URL", "\"${envProperties.getProperty("API_URL_PRODUCTION")}\"")
            buildConfigField("String", "STORAGE_BUCKET", "\"${envProperties.getProperty("STORAGE_BUCKET_PRODUCTION")}\"")
            resValue "string", "app_name", "ComposeUi"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion '1.8.22'
        kotlinCompilerExtensionVersion '1.4.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation coreKtx
    implementation appCompat
    implementation composeUi
    implementation composeRuntimeLivedata
    implementation composeActivity
    implementation composeMaterial
    implementation composeMaterialIcon
    implementation composePreview
    implementation composeNavigation
    implementation composeNavigationAnimation
    implementation composeSystemUiController
    implementation composeNavigationMaterial
    implementation composePermissions
    implementation composeCoil

    implementation pagingRuntime
    implementation composePaging

    implementation androidLifecycleRuntimeCompose
    implementation androidLifecycleService

    implementation daggaerHilt
    implementation daggaerHiltNavigationCompose
    kapt daggaerHiltCompiler

    implementation platform(firebaseBom)
    implementation firebaseCrashlyticsKtx
    implementation firebaseFirestoreKtx
    implementation firebaseStorageKtx
    implementation firebaseAuthKtx

    implementation mapsCompose
    implementation playServicesMaps
    implementation playServicesLocation

    implementation roomKtx
    implementation roomRuntime
    kapt roomCompiler

    implementation retrofit
    implementation retofitSerializationConverter
    implementation okHttp3
    implementation okHttp3LoggingInterceptor

    implementation datastoreCore
    implementation datastorePreferences
    implementation kotlinxSerializationJson

    implementation kotlinxDatetime
    implementation splashScreen
    implementation timber
    implementation gson

    testImplementation junit
    androidTestImplementation junitExt
    androidTestImplementation espresso
    androidTestImplementation composeUiTest
    debugImplementation composeUiTooling
    debugImplementation composeUiTestManifest
}

kapt {
    correctErrorTypes true
}
