name: Run Deploy Production Release App

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ master ]

jobs:
  setup:
    name: Setup Env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2

  ktLint:
    name: Run KtLint Check Code
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true

      - name: Run KtLint
        run: ./gradlew ktLint

  unitTest:
    name: Run Unit Test
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true

      - name: Run unit test
        run: ./gradlew testProductionDebugUnitTest

  build-and-deploy-production-app:
    name: Build & Deploy Production App
    needs: [ setup, ktLint, unitTest ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true
      #
      #      - name: Generate Production Release App
      #        run: ./gradlew assembleProductionRelease
      #
      #      - id: sign_app
      #        name: Sign App APK
      #        uses: r0adkll/sign-android-release@v1
      #        with:
      #          releaseDirectory: app/build/outputs/apk/production/release
      #          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      #          alias: ${{ secrets.KEY_ALIAS }}
      #          keyStorePassword: ${{ secrets.STORE_PASSWORD }}
      #          keyPassword: ${{ secrets.KEY_PASSWORD }}
      #
      #      - name: Upload APK on Build Artifacts
      #        uses: wzieba/Firebase-Distribution-Github-Action@v1
      #        with:
      #          appId: ${{ secrets.FIREBASE_PRODUCTION_APP_ID }}
      #          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIALS }}
      #          file: app/build/outputs/apk/production/release/app-production-release.apk
      #          releaseNotes: ${{ github.event.pull_request.title }}
      #          groups: appTester

      - name: Set tag name to environment
        run: echo "TAG_NAME=${{ inputs.tag }}" >> $GITHUB_ENV
      - name: Sign android app bundle
        id: bundle
        env:
          GITHUB_PACKAGE_USERNAME: ${{ secrets.NPM_USERNAME }}
          GITHUB_PACKAGE_TOKEN: ${{ secrets.NPM_TOKEN }}
          KEYSTORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > release.keystore
          ./gradlew bundleProductionRelease
          bundlePath=$(find app/build/outputs/bundle -type f -name '*.aab' | head -1)
          outputPath=app-production-release-${{ env.TAG_NAME }}.aab
          mv $bundlePath $outputPath
          echo "path=$outputPath" >> $GITHUB_OUTPUT
      - name: Load service_account.json
        run: echo '${{ secrets.PLAYSTORE_SERVICE_ACCOUNT_JSON }}' > service_account.json
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo 'RELEASE_URL<<EOF' >> $GITHUB_ENV
          gh release create ${{ env.TAG_NAME }} \
            --generate-notes \
            ${{ steps.bundle.outputs.path }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Get release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p distribution/whatsnew
          RELEASE_NOTES=`gh release view ${{ env.TAG_NAME }} --json body -q '.body'`
          RELEASE_NOTES_FORMATTED=`echo "$RELEASE_NOTES" | sed -E "s/ by @[^ ]*//g; s| in https://[^ ]*||g"`
          echo "${RELEASE_NOTES_FORMATTED:0:499}" > distribution/whatsnew/whatsnew-en-US
      - name: Upload .aab to Google PlayStore Internal
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.ducpv.composeui
          releaseFiles: ${{ steps.bundle.outputs.path }}
          whatsNewDirectory: distribution/whatsnew
          track: internal
